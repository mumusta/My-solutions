#include <bits/stdc++.h>
#define s scanf
#define p printf
#define pf push_front
#define pp push_back
#define mp make_pair
#define OO 1e9
#define EPS 1e-9
#define MOD 1000000007
#define V(a) vector <a>
#define P(a,b) pair <a,b>
#define ALL(a) a.begin(),a.end()
#define mm(a) memset(a , -1 , sizeof a)
#define mm0(a) memset(a , 0 , sizeof a)
typedef unsigned long long int ull;
typedef long long int ll; ll MAX(ll a, ll b) { if (a > b) return a; else return b; }
using namespace std; ll MIN(ll a, ll b) { if (a < b) return a; else return b; }
ll Mod(ll a, ll b) { return a >= 0 ? a % b : (b - abs(a % b)) % b; }
int X[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
int Y[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int n, m , cox , coy; string graph[30]; char land;
int connection(int i, int j){
	if (i < 0 || j < 0 || graph[i][j] != land) return 0;
	int ret = 1; graph[i][j] = 0;
	for (int d = 0; d < 4; d++){
		ret += (connection(i + X[d], Mod((j + Y[d]) , m)));
	} return ret;}
int main() { while (s("%d%d" , &n , &m) == 2){ getchar();
		for (int z = 0; z < n; z++) cin >> graph[z];
		s("%d%d", &cox, &coy); land = graph[cox][coy];
		connection(cox, coy); int M = 0;
		for (int i = 0; i < n; i++){
			for (int ii = 0; ii < m; ii++){
				if (graph[i][ii] == land){
					M = MAX(M,connection(i, ii));
				}
			}}p("%d\n", M);}
	return 0;}