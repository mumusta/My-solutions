#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <vector>
#include <deque>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <sstream>
#include <cmath>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
using namespace std;
void put_to_connected(int poten[], int numconnected , int corner , int cornerwi){
	for (int x = 0; x < numconnected; x++){
		poten[(corner ^ (1 << x))] += cornerwi;
	}
}
int FIND_MAX_V_1(int poten[], int numconnected, int size){
	int max = 0;
	for (int x = 0; x < size; x++){
		for (int i = 0; i < numconnected; i++){
			int temp = poten[x] + poten[(x ^ (1 << i))];
			if (temp > max) max = temp;
		}
	}
	return max;
}
int main(){
	int n;
	while (cin >> n){
		int p = pow(2, n);
		int * poten = new int[p];
		fill(poten, poten + (p), 0);
		for (int x = 0; x < p; x++){
			int a; scanf("%i", &a);
			put_to_connected(poten, n, x, a);
		}
		printf("%i\n", FIND_MAX_V_1(poten, n, p));
		delete[] poten;
	}
	return 0;
}