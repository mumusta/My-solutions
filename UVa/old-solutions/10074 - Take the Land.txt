#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <sstream>
#include <cmath>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
//#include <fstream>
using namespace std;
long long int a[110][110];
int main(){
	long long int n, m, sum, ans, max_up, max_down, max_l, max_r, up; bool is;
	while (true){
		scanf("%lld%lld", &n, &m);
		if (n == 0 && m == 0) break; is = false;
		for (long long int x = 0; x < n; x++){
			for (long long int xx = 0; xx < m; xx++){
				scanf("%lld", &a[x][xx]);
				if (a[x][xx]) a[x][xx] = -99999999;
				else {
					a[x][xx] = 1;
					is = true;
				}
				if (xx > 0) a[x][xx] += a[x][xx - 1];
			}
		}
		ans = 0; max_up = 0; max_down = 0; max_l = 0; max_r, up = 0; bool relode = true;
		for (long long int l = 0; l < m; l++){
			for (long long int r = l; r < m; r++){
				sum = 0;
				for (long long int i = 0; i < n; i++){
					if (relode){
						relode = false;
						up = i;
					}
					if (l > 0) sum += (a[i][r] - a[i][l - 1]);
					else sum += (a[i][r]);
					if (sum > ans){
						ans = sum;
						max_up = up;
						max_down = i;
						max_l = l;
						max_r = r;
					}
					if (sum < 0) {
						sum = 0;
						relode = true;
					}
				}
			}
		}
		if (!is) printf("0\n");
		else printf("%lld\n", (max_down - max_up + 1) * (max_r - max_l + 1));
	}
	return 0;
}