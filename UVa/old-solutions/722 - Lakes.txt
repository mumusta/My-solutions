#include <bits/stdc++.h>
#define s scanf
#define p printf
#define pf push_front
#define pp push_back
#define mp make_pair
#define OO 1e9
#define EPS 1e-9
#define MOD 1000000007
#define V(a) vector <a>
#define P(a,b) pair <a,b>
#define ALL(a) a.begin(),a.end()
#define mm(a) memset(a , -1 , sizeof a)
#define mm0(a) memset(a , 0 , sizeof a)
typedef unsigned long long int ull;
typedef long long int ll; ll MAX(ll a, ll b) { if (a > b) return a; else return b; }
using namespace std; ll MIN(ll a, ll b) { if (a < b) return a; else return b; }
ll Mod(ll a, ll b) { return a >= 0 ? a % b : (b - abs(a % b)) % b; }
short int RR[] = { 1, 0, -1, 0, 1, -1, -1, 0, 1 };
short int CC[] = { 0, 1, 0, -1, 1, 1, -1, -1, -1 };
char Line[110]; char graph[101][101]; int C, a, b, R;
int filling(int i, int j){
	if (i < 0 || i >= R || j < 0 || j >= C) return 0; if (graph[i][j] == '1') return 0;
	graph[i][j] = '1'; int ret = 1;
	for (int D = 0; D < 4; D++){
		ret += (filling(i + RR[D], j + CC[D]));
	} return ret;}
int main() { int t; s("%d", &t);
	for (int x = 1; x <= t; x ++){
		R = 0; s("%d%d", &a, &b); a--; b--; cin.ignore();
		while (gets(Line) && strlen(Line) > 0){
			strcpy(graph[R], Line); R++;
		} C = strlen(graph[0]);
		if (x != 1) p("\n\n"); p("%d", filling(a, b));
	} p("\n");
	return 0;
}