#include <bits/stdc++.h>
#define s scanf
#define p printf
#define ss scanf_s
#define pf push_front
#define pp push_back
#define mp make_pair
#define OO 1e9
#define EPS 1e-9
#define mm(a) memset(a , -1 , sizeof a)
#define mm0(a) memset(a , 0 , sizeof a)
using namespace std;
long long int dp[101][70000];
int target , t , n ; vector <int> seq; bool ret;
int DP (int index , int total , string str){ if (ret) return 1; 
if (total > 32000 || total < -32000) return 0;
	if (index == n){ 
		if (total == target) { p("%d" , seq[0]);
			for (int x = 1 ; x < n  && !ret; x++){
				p("%c%d" , str[x-1],seq[x]);
			} p("=%d\n" , target);
			ret = true; return 1;
		}
		else return 0;
	} if (dp[index][total+32000] != -1) return dp[index][total+32000];
	int c = 0;
	if (total % seq[index] == 0 && !ret){
		c = max(c , DP(index + 1 , total / seq[index], str+'/'));
	}
	if (total + seq[index] <= 32000 && !ret){
		c = max (c , DP (index + 1  , total + seq[index], str+'+'));
	}
	if (total - seq[index] >= -32000 && !ret){
		c = max ( c , DP (index + 1 , total - seq[index], str+'-'));
	}
	if (total * seq[index] <= 32000 && !ret){
		c = max (c , DP (index + 1  , total * seq[index], str+'*'));
	}
	return dp[index][total+32000] = c;
}
int main() {
s("%d" , &t);
for (int x = 0 ; x < t ; x ++){ mm(dp);
	s("%d" , &n); seq.assign(n,0); ret = false; for (int i = 0 ; i < n ; i ++) s("%d" , &seq[i]); s("%d" , &target);
	int ans = DP (1,seq[0],""); if (ans == 0) p("NO EXPRESSION\n");
}
    return 0;
}