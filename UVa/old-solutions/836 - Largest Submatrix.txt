#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <cstring>
#include <vector>
#include <deque>
#include <algorithm>
#include <map>
#include <set>
#include <stack>
#include <queue>
#include <iomanip>
#include <sstream>
#include <cmath>
#include <bitset>
#include <unordered_set>
#include <unordered_map>
//#include <fstream>
using namespace std;
int sum, ans, a[30][30] , rmax , cmax;bool done;
int main(){
	int t; scanf("%i", &t);
	cin.ignore();cin.ignore();
	for (int tt = 0; tt < t; tt++){
		string str; rmax = 0; cmax = 0; bool if_we_get_l = false; done = false;
		while (getline(cin, str)){
			if (str == "") break;
			if (!if_we_get_l){
				cmax = str.length();
				if_we_get_l = true;
			}
			for (int x = 0; x < cmax; x++){
				a[rmax][x] = str[x] - '0';
				if (!a[rmax][x]) a[rmax][x] = -999999;
				else done = true;
				if (x > 0) a[rmax][x] += a[rmax][x - 1];
			}
			rmax++;
		}
		int max_l = 0, max_r = 0, max_up = 0, max_down = 0, up = 0; bool new_range = true ;   ans = 0;
		for (int l = 0; l < cmax; l++){
			for (int r = l; r < cmax; r++){
				sum = 0;
				for (int i = 0; i < rmax; i++){
					if (new_range){
						up = i;
						new_range = false;
					}
					if (i > 0) sum += (a[i][r] - a[i][l - 1]);
					else sum += a[i][r];
					if (sum > ans){
						
						ans = sum;
						max_l = l; max_r = r; max_up = up; max_down = i;
						continue;
					}
					if (sum < 0){
						new_range = true;
						sum = 0;
					}
				}
			}
		}
		if (tt != 0)printf ("\n\n");
		if (!done)printf ("0");
		else {
		long long int zd = (max_r - max_l + 1) * (max_down - max_up + 1);
		printf("%lld", zd);
		}
		cout.clear();
	}
	printf ("\n");
	return 0;
}