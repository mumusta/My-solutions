#include <bits/stdc++.h>
#define s scanf
#define p printf
#define pf push_front
#define pp push_back
#define mp make_pair
#define OO 1e9
#define EPS 1e-9
#define __ 1000000007
#define V(a) vector <a>
#define P(a,b) pair <a,b>
#define II pair<int, int>
#define ALL(a) a.begin(),a.end()
#define mm(a) memset(a , -1 , sizeof a)
#define mm0(a) memset(a , 0 , sizeof a)
typedef unsigned long long int ull; 
typedef long long int ll; ll MAX(ll a, ll b) { if (a > b) return a; else return b; }
using namespace std; ll MIN(ll a, ll b) { if (a < b) return a; else return b; }
int OneD(int row, int col, int t_n_o_r) { return row * t_n_o_r + col; }
ll MOD(ll a, ll b) { return a >= 0 ? a % b : (b - abs(a % b)) % b; }
int X[] = { 1, 0, -1, 0, 1, -1, -1, 1 };
int Y[] = { 0, 1, 0, -1, 1, 1, -1, -1 };
int grid[1001][1001] , dis[1001][1001];
int main() { int n, m , b , cw = 0 , r , N , c;
	while (s("%d%d", &n, &m) == 2){
		if (n == 0 && m == 0)break;
		s("%d", &b); cw++; if (cw != 1) mm0(grid);
		for (int o = 0; o < b; o++){
			s("%d%d", &r, &N); for (int x = 0; x < N; x++){ s("%d", &c); grid[r][c] = 1; }
		} int si, sii, ei, eii, ans = 0; s("%d%d%d%d", &si, &sii, &ei, &eii);
		queue <II> q; q.push(mp(si, sii)); mm(dis); dis[si][sii] = 0; bool again = true;
		while (!q.empty() && again){
			int ui = q.front().first, uii = q.front().second; q.pop();
			for (int x = 0; x < 4; x++){
				int vi = ui + X[x], vii = uii + Y[x];
				if (vi > -1 && vii > -1 && vi < n && vii < m && !grid[vi][vii]){
					if (dis[vi][vii] == -1){
						dis[vi][vii] = dis[ui][uii] + 1;
						if (vi == ei && vii == eii) { again = false; ans = dis[vi][vii]; break; }
						q.push(mp(vi, vii));
					}
				}
			}
		} p("%d\n", ans);
	}
	return 0;
}